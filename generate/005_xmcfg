#!/bin/sh

if ! [ $# -eq 3 ]; then
	echo "Syntax: 003_xmemcfg <sw> CONFIG|DECONFIG <output-script>" >&2
	exit 8
fi
sw="$1"
verb="$2"
script="$3"

zospm=`whence zospm`
zospmdir=${zospm%/*}
zospmroot=${zospmdir%/*}

cat << EOF >${script}
#!/bin/sh
#set -x
export verb="${verb}"
export PATH=${zospmdir}:\$PATH
export sw="${sw}"
. zospmsetswenv "${sw}"

set +x
authlib="\${ZOSPM_TGT_HLQ}${sw}.SZWEAUTH"
srclib="\${ZOSPM_TGT_HLQ}${sw}.SZWESAMP"
parmlib="\${ZOSPM_TGT_HLQ}PARMLIB"
proclib="\${ZOSPM_TGT_HLQ}PROCLIB"
EOF

if [ $? -gt 0 ]; then
	echo "Unable to create ${sw} Update script: ${script}." >&2
	exit 16
fi
chmod u+x "${script}"

if [ "${verb}" = "CONFIG" ]; then
cat <<'EOF' >>${script}
	swesip=`cat "//'${srclib}(ZWESIP00)'"`

	sijcl=`cat "//'${srclib}(ZWESISTC)'"`
	sijcl=`jclReplaceDD "${sijcl}" "ZWESIS01" "STEPLIB" "${ZOSPM_TGT_HLQ}${sw}.SZWEAUTH"`
	sijcl=`jclReplaceDD "${sijcl}" "ZWESIS01" "PARMLIB" "${parmlib}"`

	sajcl=`cat "//'${srclib}(ZWESASTC)'"`
	sajcl=`jclReplaceDD "${sajcl}" "ZWESAUX" "STEPLIB" "${ZOSPM_TGT_HLQ}${sw}.SZWEAUTH"`
EOF
else
cat <<'EOF' >>${script}
	swesip=''
	sijcl=''
	sajcl=''
EOF
fi

cat <<'EOF' >>${script}
procregistrar "${sw}" "${verb}" ZWESISTC "${sijcl}"
chk "$?" "Unable to ${verb} proclib member ${proclib}(ZWESISTC)"

procregistrar "${sw}" "${verb}" ZWESASTC "${sajcl}"
chk "$?" "Unable to ${verb} proclib member ${proclib}(ZWESASTC)"

profhdr="//* ${sw} start */"
profftr="//* ${sw} end */"

registrar "${sw}" "${verb}" "${parmlib}" "ZWESIP00" "$profhdr" "$profftr" "//*" "*/" "${zwesip}"
chk "$?" "Unable to ${verb} ${parmlib}(ZWESIP00)"

apfregistrar "${sw}" "${verb}" "${authlib}"
chk "$?" "Unable to ${verb} APF Authorization of ${authlib}"
 
pptText="PPT PGMNAME(ZWESIS01) KEY(4) NOSWAP
PPT PGMNAME(ZWESAUX) KEY(4) NOSWAP"
pptregistrar "${sw}" "${verb}" "${pptText}"
chk "$?" "Unable to ${verb} PPT entries"

exit $?

EOF
exit 0  
